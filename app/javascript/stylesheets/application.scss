@import '~bulma/bulma';

// Increase specificity by repeating the class
.navbar.navbar {
  background-color: #000000; // Set the background color to grey
  padding-top: 1rem; // Increase top padding
  padding-bottom: 1rem;
}

// Ensure the text color is white
.navbar-item, .navbar-link {
  color: rgb(222, 222, 222) !important; // The !important flag can help override other styles
}

// .navbar-menu

.navbar-item:hover, .navbar-link:hover {
  background-color: #111; // Darken the item on hover
}

// .fade-grey-background {
//   background: linear-gradient(to bottom, #0f0f0f, transparent);
// }

// Override Bulma's default hover background color for navbar items
.navbar-menu .navbar-item:hover {
  background-color: #5c5c5c; // Example: light grey color
  // margin-top: 20px; //bar grows when hovered on
}

// .navbar-brand, .navbar-menu {
//   align-items: center; // Align items vertically in the center
// }

.navbar-item {
  // Adjust padding or margin as necessary for fine-tuning
  padding-top: 0.0rem;
  padding-bottom: 0.0rem;
}

// Bulma uses classes for its elements, so you don't need to style the 'ul' and 'li' directly if you use the correct Bulma classes
// However, if you need to apply specific styles, add a class to the 'ul' or 'li' in your HTML and reference it here

.user-info {
  color: rgb(191, 172, 255);
  // The '.user-info' class should be added to the container that holds the user information elements
}

// Since you're using Bulma, you don't need to import Bootstrap just for the modal; Bulma has its own modal component
// If you still want to use Bootstrap's modal, then keep the import
// @import "bootstrap";

// Custom styling for pagination
.pagination {
  .pagination-link, .pagination-ellipsis {
    padding: 8px 12px; // Adjust for more padding
    margin-right: 4px;
    border-radius: 4px; // Rounded corners
    transition: background-color 0.2s;

    &:hover {
      background-color: #030202; // Light gray background on hover
    }
  }

  .pagination-link.is-current, .pagination-link.is-current:hover {
    background-color: #4a4a4a; // Active page link color (Darker grey)
    border-color: #4a4a4a;
    color: rgb(255, 242, 242) !important; // White text for active page link
  }
}

// Style for the greeting text
.dashboard-greeting {
  // Add styles for the greeting area if needed, e.g., margin-right for spacing
  margin-right: 1em;
}

// Style for the dashboard area, arranging greeting and logout/login button
.dashboard-info {
  display: flex;
  justify-content: space-between;
  align-items: center; // Changed from 'right' to 'center'
}

// Style for the logout/login button
.dashboard-logout {
  padding: 0.5em 1em;
  border: none;
  border-radius: 4px;
}

// Sidebar custom styling
.menu {
  // Stretch the sidebar to the full height
  display: flex;
  flex-direction: column;
  flex-grow: 1; // Make the sidebar grow to fill the container
  background-color: #5f04ce; // Set the background color
}

// Ensure the menu items fill up the sidebar
.menu-label, .menu-list {
  flex-grow: 1; // This will make them fill the available space in the sidebar
  color: #ffffff; // Set the text color for visibility
}

// If you want to style links within the menu to ensure they are visible on the red background
.menu-list a {
  color: #ffffff; // White text color for links
  &:hover {
    background-color: darken(#d55058, 16%); // Slightly darker red on hover
  }
}

.menu-list .label {
  color: white; // Set the color to white
}

// Custom CSS for centering pagination
.pagination-wrapper {
  display: flex;
  justify-content: center;
  margin-top: 1rem; // Adjust the top margin as needed
}


// Custom CSS for the search form
.search-form-wrapper {
  max-width: 600px; // Example max-width, adjust as needed
  margin: auto;
}

// If the partial contains the form directly
.form {
  max-width: 600px; // Example max-width, adjust as needed
  margin: auto;
}

// Styles for the search form elements
.field.has-addons .control {
  margin-left: 0.5rem; // Adds a margin to the right of each control element
}

// To remove the right margin from the last control element (the search button in this case)
.field.has-addons .control:last-child {
  margin-right: 0; // Removes the margin on the right of the last control element
}

// Additional styling for the search button if needed
.button.is-info {
  margin-left: 0; // If you want a margin on the left of the search button
}

// If you want to add margin around the entire form (top, bottom, left, right)
.is-flex.is-align-items-center {
  margin: 1rem; // Adjust the value to suit your design
}



// Add a margin to the right of the username readout and logout button
.hello-message, .logout-button {
  margin-right: 2rem; // Adjust the margin as needed
}

// You may need to remove the margin on the last item if there are multiple elements
.hello-message:last-child, .logout-button:last-child {
  margin-right: 3;
}

// Increase height of form elements
.field.has-addons .control .input,
.field.has-addons .control .select select,
.field.has-addons .control .button {
  padding-top: 0rem; // Increase top padding
  padding-bottom: 0rem; // Increase bottom padding
  // Alternatively, you can set a specific height
  // height: 3rem; // Adjust as needed
}
